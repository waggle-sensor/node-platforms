---
- name: Set Up Extra Drive
  hosts: root
  vars_prompt:
    - name: Connect Drive
      prompt: Please connect your usb drive to the nano. When ready press enter
      private: no

  tasks:
    - name: Read {{ ext_drive_dev }} device information
      parted: device="{{ ext_drive_dev }}" unit=MiB
      register: sda_info

    - name: Print {{ ext_drive_dev }} device information
      ansible.builtin.debug:
        msg: "{{sda_info}}"

    - name: Disable {{ ext_drive_dev }} swap partitions
      shell: swapoff {{ ext_drive_dev }}{{ item.num }}
      args:
        executable: /bin/bash
      loop: "{{ sda_info.partitions }}"
      when: item.fstype is search("linux-swap")

    # TODO: figure out how to disable auto-mount which causes this to fail
    - name: Remove all partitions from {{ ext_drive_dev }}
      parted:
        device: "{{ ext_drive_dev }}"
        number: "{{ item.num }}"
        state: absent
      loop: "{{ sda_info.partitions }}"

    - name: Clear the current partition table and create GPT table
      shell: >
        (echo "g";
         sleep 5s;
         echo "w"
        ) | fdisk --wipe always --wipe-partitions always {{ ext_drive_dev }}
      args:
        executable: /bin/bash

    - name: Create swap partition
      shell: >
        (echo "n";
         echo "{{ item.num }}";
         echo "";
         echo "{{ item.lsector }}";
         echo "t";
         echo "{{ item.type }}";
         sleep 5s;
         echo "w"
        ) | fdisk --wipe always --wipe-partitions always {{ ext_drive_dev }}
      args:
        executable: /bin/bash
      with_items:
        - { num: 1, lsector: +16G, type: 19 }

    - name: Create drive partitions
      shell: >
        (echo "n";
         echo "{{ item.num }}";
         echo "";
         echo "{{ item.lsector }}";
         sleep 5s;
         echo "w"
        ) | fdisk --wipe always --wipe-partitions always {{ ext_drive_dev }}
      args:
        executable: /bin/bash
      with_items:
        - { num: 2, lsector: +32G}
        - { num: 3, lsector: ""}

    - name: Format the swap partition
      shell: mkswap {{ ext_drive_dev }}1 -L ext-swap
      args:
        executable: /bin/bash

    - name: Format (ext4) drive partitions
      community.general.filesystem:
        fstype: ext4
        force: yes
        dev: "{{ ext_drive_dev }}{{ item.num }}"
      with_items:
        - { num: 2 }
        - { num: 3 }

    - name: Label the partitions
      shell: e2label {{ ext_drive_dev }}{{ item.num }} {{ item.label }}
      args:
        executable: /bin/bash
      with_items:
        - { num: 2, label: system-data }
        - { num: 3, label: plugin-data }

    - name: Populate the fstab file
      ansible.posix.mount:
        path: "{{ item.path }}"
        src: "{{ ext_drive_dev }}{{ item.num }}"
        fstype: "{{ item.fstype }}"
        opts: "{{ item.opts }}"
        dump: "0"
        passno: "{{ item.passno }}"
        state: present
        boot: yes
      with_items:
        - { num: 1, path: "swap", fstype: swap, opts: "defaults,nofail", passno: "0" }
        - { num: 3, path: "/media/plugin-data", fstype: ext4, opts: "defaults,nofail,x-systemd.after=local-fs-pre.target,x-systemd.before=local-fs.target", passno: "2" }

    - name: Unconditionally reboot the machine to mount partitions
      ansible.builtin.reboot: